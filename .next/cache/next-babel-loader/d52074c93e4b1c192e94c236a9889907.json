{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/mfm/Desktop/8-projects/swift/client/pages/user/link/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// imports\nimport { useState, useEffect } from 'react';\nimport Layout from '../../../components/Layout';\nimport axios from 'axios';\nimport withUser from '../../withUser';\nimport { getCookie, isAuth } from '../../../helpers/auth';\nimport { API } from '../../../config';\nimport { showSuccessMessage, showErrorMessage } from '../../../helpers/alerts';\n\nvar Update = function Update(_ref) {\n  var oldLink = _ref.oldLink,\n      token = _ref.token;\n\n  // state\n  var _useState = useState({\n    title: oldLink.title,\n    url: oldLink.url,\n    categories: oldLink.categories,\n    loadedCategories: [],\n    success: '',\n    error: '',\n    type: oldLink.type,\n    medium: oldLink.medium\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var title = state.title,\n      url = state.url,\n      categories = state.categories,\n      loadedCategories = state.loadedCategories,\n      success = state.success,\n      error = state.error,\n      type = state.type,\n      medium = state.medium; // load categories when component mounts using useEffect\n\n  useEffect(function () {\n    loadCategories();\n  }, [success]);\n\n  var loadCategories = function loadCategories() {\n    var response;\n    return _regeneratorRuntime.async(function loadCategories$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(axios.get(\"\".concat(API, \"/categories\")));\n\n          case 2:\n            response = _context.sent;\n            setState(_objectSpread({}, state, {\n              loadedCategories: response.data\n            }));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  };\n\n  var handleTitleChange = function handleTitleChange(e) {\n    setState(_objectSpread({}, state, {\n      title: e.target.value,\n      error: '',\n      success: ''\n    }));\n  };\n\n  var handleURLChange = function handleURLChange(e) {\n    setState(_objectSpread({}, state, {\n      url: e.target.value,\n      error: '',\n      success: ''\n    }));\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    var dynamicUpdateUrl, response;\n    return _regeneratorRuntime.async(function handleSubmit$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            e.preventDefault(); // console.table({ title, url, categories, type, medium });\n            // use update link based on logged in user role\n\n            if (isAuth() && isAuth().role === 'admin') {\n              dynamicUpdateUrl = \"\".concat(API, \"/link/admin/\").concat(oldLink._id);\n            } else {\n              dynamicUpdateUrl = \"\".concat(API, \"/link/\").concat(oldLink._id);\n            }\n\n            _context2.prev = 2;\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(axios.put(dynamicUpdateUrl, {\n              title: title,\n              url: url,\n              categories: categories,\n              type: type,\n              medium: medium\n            }, {\n              headers: {\n                Authorization: \"Bearer \".concat(token)\n              }\n            }));\n\n          case 5:\n            response = _context2.sent;\n            setState(_objectSpread({}, state, {\n              success: 'Link is updated'\n            }));\n            _context2.next = 13;\n            break;\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](2);\n            console.log('LINK SUBMIT ERROR', _context2.t0);\n            setState(_objectSpread({}, state, {\n              error: _context2.t0.response.data.error\n            }));\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[2, 9]]);\n  };\n\n  var handleTypeClick = function handleTypeClick(e) {\n    setState(_objectSpread({}, state, {\n      type: e.target.value,\n      success: '',\n      error: ''\n    }));\n  };\n\n  var handleMediumClick = function handleMediumClick(e) {\n    setState(_objectSpread({}, state, {\n      medium: e.target.value,\n      success: '',\n      error: ''\n    }));\n  };\n\n  var showMedium = function showMedium() {\n    return __jsx(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"form-check ml-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      className: \"form-check-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      type: \"radio\",\n      onClick: handleMediumClick,\n      checked: medium === 'video',\n      value: \"video\",\n      className: \"from-check-input\",\n      name: \"medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), ' ', \"Video\")), __jsx(\"div\", {\n      className: \"form-check ml-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      className: \"form-check-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      type: \"radio\",\n      onClick: handleMediumClick,\n      checked: medium === 'book',\n      value: \"book\",\n      className: \"from-check-input\",\n      name: \"medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), ' ', \"Book\")));\n  };\n\n  var showTypes = function showTypes() {\n    return __jsx(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"form-check ml-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      className: \"form-check-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      type: \"radio\",\n      onClick: handleTypeClick,\n      checked: type === 'free',\n      value: \"free\",\n      className: \"from-check-input\",\n      name: \"type\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), ' ', \"Free\")), __jsx(\"div\", {\n      className: \"form-check ml-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      className: \"form-check-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      type: \"radio\",\n      onClick: handleTypeClick,\n      checked: type === 'paid',\n      value: \"paid\",\n      className: \"from-check-input\",\n      name: \"type\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), ' ', \"Paid\")));\n  };\n\n  var handleToggle = function handleToggle(c) {\n    return function () {\n      // return the first index or -1\n      var clickedCategory = categories.indexOf(c);\n\n      var all = _toConsumableArray(categories);\n\n      if (clickedCategory === -1) {\n        all.push(c);\n      } else {\n        all.splice(clickedCategory, 1);\n      }\n\n      console.log('all >> categories', all);\n      setState(_objectSpread({}, state, {\n        categories: all,\n        success: '',\n        error: ''\n      }));\n    };\n  }; // show categories > checkbox\n\n\n  var showCategories = function showCategories() {\n    return loadedCategories && loadedCategories.map(function (c, i) {\n      return __jsx(\"li\", {\n        className: \"list-unstyled\",\n        key: c._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        type: \"checkbox\",\n        checked: categories.includes(c._id),\n        onChange: handleToggle(c._id),\n        className: \"mr-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }), __jsx(\"label\", {\n        className: \"form-check-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, c.name));\n    });\n  }; // link create form\n\n\n  var submitLinkForm = function submitLinkForm() {\n    return __jsx(\"form\", {\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"form-group mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"Title\"), __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      onChange: handleTitleChange,\n      value: title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-group mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"URL\"), __jsx(\"input\", {\n      type: \"url\",\n      className: \"form-control\",\n      onChange: handleURLChange,\n      value: url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, __jsx(\"button\", {\n      disabled: !token,\n      className: \"btn btn-outline-warning\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, isAuth() || token ? 'Update' : 'Login to update')));\n  };\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"container pt-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"col-md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, \"Update Link\"), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"col-md-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    className: \"text-muted ml-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, \"Category\"), __jsx(\"ul\", {\n    style: {\n      maxHeight: '100px',\n      overflowY: 'scroll'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, showCategories())), __jsx(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    className: \"text-muted ml-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, \"Type\"), showTypes()), __jsx(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    className: \"text-muted ml-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, \"Medium\"), showMedium())), __jsx(\"div\", {\n    className: \"col-md-8\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, success && showSuccessMessage(success), error && showErrorMessage(error), submitLinkForm()))));\n};\n\nUpdate.getInitialProps = function _callee(_ref2) {\n  var req, token, query, response;\n  return _regeneratorRuntime.async(function _callee$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          req = _ref2.req, token = _ref2.token, query = _ref2.query;\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(axios.get(\"\".concat(API, \"/link/\").concat(query.id)));\n\n        case 3:\n          response = _context3.sent;\n          return _context3.abrupt(\"return\", {\n            oldLink: response.data,\n            token: token\n          });\n\n        case 5:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  });\n};\n\nexport default withUser(Update);","map":{"version":3,"sources":["/home/mfm/Desktop/8-projects/swift/client/pages/user/link/[id].js"],"names":["useState","useEffect","Layout","axios","withUser","getCookie","isAuth","API","showSuccessMessage","showErrorMessage","Update","oldLink","token","title","url","categories","loadedCategories","success","error","type","medium","state","setState","loadCategories","get","response","data","handleTitleChange","e","target","value","handleURLChange","handleSubmit","preventDefault","role","dynamicUpdateUrl","_id","put","headers","Authorization","console","log","handleTypeClick","handleMediumClick","showMedium","showTypes","handleToggle","c","clickedCategory","indexOf","all","push","splice","showCategories","map","i","includes","name","submitLinkForm","maxHeight","overflowY","getInitialProps","req","query","id"],"mappings":"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","sourcesContent":["// imports\nimport { useState, useEffect } from 'react';\nimport Layout from '../../../components/Layout';\nimport axios from 'axios';\nimport withUser from '../../withUser';\nimport { getCookie, isAuth } from '../../../helpers/auth';\nimport { API } from '../../../config';\nimport { showSuccessMessage, showErrorMessage } from '../../../helpers/alerts';\n\nconst Update = ({ oldLink, token }) => {\n    // state\n    const [state, setState] = useState({\n        title: oldLink.title,\n        url: oldLink.url,\n        categories: oldLink.categories,\n        loadedCategories: [],\n        success: '',\n        error: '',\n        type: oldLink.type,\n        medium: oldLink.medium\n    });\n\n    const { title, url, categories, loadedCategories, success, error, type, medium } = state;\n\n    // load categories when component mounts using useEffect\n    useEffect(() => {\n        loadCategories();\n    }, [success]);\n\n    const loadCategories = async () => {\n        const response = await axios.get(`${API}/categories`);\n        setState({ ...state, loadedCategories: response.data });\n    };\n\n    const handleTitleChange = e => {\n        setState({ ...state, title: e.target.value, error: '', success: '' });\n    };\n\n    const handleURLChange = e => {\n        setState({ ...state, url: e.target.value, error: '', success: '' });\n    };\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n        // console.table({ title, url, categories, type, medium });\n        // use update link based on logged in user role\n\n        let dynamicUpdateUrl;\n        if (isAuth() && isAuth().role === 'admin') {\n            dynamicUpdateUrl = `${API}/link/admin/${oldLink._id}`;\n        } else {\n            dynamicUpdateUrl = `${API}/link/${oldLink._id}`;\n        }\n\n        try {\n            const response = await axios.put(\n                dynamicUpdateUrl,\n                { title, url, categories, type, medium },\n                {\n                    headers: {\n                        Authorization: `Bearer ${token}`\n                    }\n                }\n            );\n            setState({ ...state, success: 'Link is updated' });\n        } catch (error) {\n            console.log('LINK SUBMIT ERROR', error);\n            setState({ ...state, error: error.response.data.error });\n        }\n    };\n\n    const handleTypeClick = e => {\n        setState({ ...state, type: e.target.value, success: '', error: '' });\n    };\n\n    const handleMediumClick = e => {\n        setState({ ...state, medium: e.target.value, success: '', error: '' });\n    };\n\n    const showMedium = () => (\n        <React.Fragment>\n            <div className=\"form-check ml-3\">\n                <label className=\"form-check-label\">\n                    <input\n                        type=\"radio\"\n                        onClick={handleMediumClick}\n                        checked={medium === 'video'}\n                        value=\"video\"\n                        className=\"from-check-input\"\n                        name=\"medium\"\n                    />{' '}\n                    Video\n                </label>\n            </div>\n\n            <div className=\"form-check ml-3\">\n                <label className=\"form-check-label\">\n                    <input\n                        type=\"radio\"\n                        onClick={handleMediumClick}\n                        checked={medium === 'book'}\n                        value=\"book\"\n                        className=\"from-check-input\"\n                        name=\"medium\"\n                    />{' '}\n                    Book\n                </label>\n            </div>\n        </React.Fragment>\n    );\n\n    const showTypes = () => (\n        <React.Fragment>\n            <div className=\"form-check ml-3\">\n                <label className=\"form-check-label\">\n                    <input\n                        type=\"radio\"\n                        onClick={handleTypeClick}\n                        checked={type === 'free'}\n                        value=\"free\"\n                        className=\"from-check-input\"\n                        name=\"type\"\n                    />{' '}\n                    Free\n                </label>\n            </div>\n\n            <div className=\"form-check ml-3\">\n                <label className=\"form-check-label\">\n                    <input\n                        type=\"radio\"\n                        onClick={handleTypeClick}\n                        checked={type === 'paid'}\n                        value=\"paid\"\n                        className=\"from-check-input\"\n                        name=\"type\"\n                    />{' '}\n                    Paid\n                </label>\n            </div>\n        </React.Fragment>\n    );\n\n    const handleToggle = c => () => {\n        // return the first index or -1\n        const clickedCategory = categories.indexOf(c);\n        const all = [...categories];\n\n        if (clickedCategory === -1) {\n            all.push(c);\n        } else {\n            all.splice(clickedCategory, 1);\n        }\n        console.log('all >> categories', all);\n        setState({ ...state, categories: all, success: '', error: '' });\n    };\n\n    // show categories > checkbox\n    const showCategories = () => {\n        return (\n            loadedCategories &&\n            loadedCategories.map((c, i) => (\n                <li className=\"list-unstyled\" key={c._id}>\n                    <input\n                        type=\"checkbox\"\n                        checked={categories.includes(c._id)}\n                        onChange={handleToggle(c._id)}\n                        className=\"mr-2\"\n                    />\n                    <label className=\"form-check-label\">{c.name}</label>\n                </li>\n            ))\n        );\n    };\n\n    // link create form\n    const submitLinkForm = () => (\n        <form onSubmit={handleSubmit}>\n            <div className=\"form-group mb-3\">\n                <label className=\"text-muted\">Title</label>\n                <input type=\"text\" className=\"form-control\" onChange={handleTitleChange} value={title} />\n            </div>\n            <div className=\"form-group mb-3\">\n                <label className=\"text-muted\">URL</label>\n                <input type=\"url\" className=\"form-control\" onChange={handleURLChange} value={url} />\n            </div>\n            <div>\n                <button disabled={!token} className=\"btn btn-outline-warning\" type=\"submit\">\n                    {isAuth() || token ? 'Update' : 'Login to update'}\n                </button>\n            </div>\n        </form>\n    );\n\n    return (\n        <Layout>\n            <div className='container pt-5'>\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <h1>Update Link</h1>\n                        <br />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-md-4\">\n                        <div className=\"form-group\">\n                            <label className=\"text-muted ml-4\">Category</label>\n                            <ul style={{ maxHeight: '100px', overflowY: 'scroll' }}>{showCategories()}</ul>\n                        </div>\n                        <div className=\"form-group\">\n                            <label className=\"text-muted ml-4\">Type</label>\n                            {showTypes()}\n                        </div>\n                        <div className=\"form-group\">\n                            <label className=\"text-muted ml-4\">Medium</label>\n                            {showMedium()}\n                        </div>\n                    </div>\n                    <div className=\"col-md-8\">\n                        {success && showSuccessMessage(success)}\n                        {error && showErrorMessage(error)}\n                        {submitLinkForm()}\n                    </div>\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nUpdate.getInitialProps = async ({ req, token, query }) => {\n    const response = await axios.get(`${API}/link/${query.id}`);\n    return { oldLink: response.data, token };\n};\n\nexport default withUser(Update);\n"]},"metadata":{},"sourceType":"module"}