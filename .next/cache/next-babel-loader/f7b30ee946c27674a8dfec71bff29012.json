{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/mfm/Desktop/8-projects/swift/client/pages/auth/password/reset/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { showSuccessMessage, showErrorMessage } from '../../../../helpers/alerts';\nimport { API } from '../../../../config';\nimport Router, { withRouter } from 'next/router';\nimport jwt from 'jsonwebtoken';\nimport Layout from '../../../../components/Layout';\n\nvar ResetPassword = function ResetPassword(_ref) {\n  var router = _ref.router;\n\n  var _useState = useState({\n    name: '',\n    token: '',\n    newPassword: '',\n    buttonText: 'Reset Password',\n    success: '',\n    error: ''\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var name = state.name,\n      token = state.token,\n      newPassword = state.newPassword,\n      buttonText = state.buttonText,\n      success = state.success,\n      error = state.error;\n  useEffect(function () {\n    console.log(router);\n    var decoded = jwt.decode(router.query.id);\n    if (decoded) setState(_objectSpread({}, state, {\n      name: decoded.name,\n      token: router.query.id\n    }));\n  }, [router]);\n\n  var handleChange = function handleChange(e) {\n    setState(_objectSpread({}, state, {\n      newPassword: e.target.value,\n      success: '',\n      error: ''\n    }));\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    var response;\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            e.preventDefault(); // console.log('post email to ', email);\n\n            setState(_objectSpread({}, state, {\n              buttonText: 'Sending'\n            }));\n            _context.prev = 2;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(axios.put(\"\".concat(API, \"/reset-password\"), {\n              resetPasswordLink: token,\n              newPassword: newPassword\n            }));\n\n          case 5:\n            response = _context.sent;\n            // console.log('FORGOT PASSWORD', response);\n            setState(_objectSpread({}, state, {\n              newPassword: '',\n              buttonText: 'Done',\n              success: response.data.message\n            }));\n            _context.next = 13;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](2);\n            console.log('RESET PW ERROR', _context.t0);\n            setState(_objectSpread({}, state, {\n              buttonText: 'Forgot Password',\n              error: _context.t0.response.data.error\n            }));\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[2, 9]]);\n  };\n\n  var passwordResetForm = function passwordResetForm() {\n    return __jsx(\"form\", {\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      type: \"password\",\n      className: \"form-control\",\n      onChange: handleChange,\n      value: newPassword,\n      placeholder: \"Type new password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, __jsx(\"button\", {\n      className: \"btn btn-outline-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, buttonText)));\n  };\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"col-md-6 offset-md-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Hi \", name, \", Ready to Reset Password?\"), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), success && showSuccessMessage(success), error && showErrorMessage(error), passwordResetForm())));\n};\n\nexport default withRouter(ResetPassword);","map":{"version":3,"sources":["/home/mfm/Desktop/8-projects/swift/client/pages/auth/password/reset/[id].js"],"names":["useState","useEffect","axios","showSuccessMessage","showErrorMessage","API","Router","withRouter","jwt","Layout","ResetPassword","router","name","token","newPassword","buttonText","success","error","state","setState","console","log","decoded","decode","query","id","handleChange","e","target","value","handleSubmit","preventDefault","put","resetPasswordLink","response","data","message","passwordResetForm"],"mappings":";;;;;;;;;;;;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,EAA6BC,gBAA7B,QAAqD,4BAArD;AACA,SAASC,GAAT,QAAoB,oBAApB;AACA,OAAOC,MAAP,IAAiBC,UAAjB,QAAmC,aAAnC;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,MAAP,MAAmB,+BAAnB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAgB;AAAA,MAAbC,MAAa,QAAbA,MAAa;;AAAA,kBACRX,QAAQ,CAAC;AAC/BY,IAAAA,IAAI,EAAE,EADyB;AAE/BC,IAAAA,KAAK,EAAE,EAFwB;AAG/BC,IAAAA,WAAW,EAAE,EAHkB;AAI/BC,IAAAA,UAAU,EAAE,gBAJmB;AAK/BC,IAAAA,OAAO,EAAE,EALsB;AAM/BC,IAAAA,KAAK,EAAE;AANwB,GAAD,CADA;AAAA,MAC3BC,KAD2B;AAAA,MACpBC,QADoB;;AAAA,MAS1BP,IAT0B,GAS+BM,KAT/B,CAS1BN,IAT0B;AAAA,MASpBC,KAToB,GAS+BK,KAT/B,CASpBL,KAToB;AAAA,MASbC,WATa,GAS+BI,KAT/B,CASbJ,WATa;AAAA,MASAC,UATA,GAS+BG,KAT/B,CASAH,UATA;AAAA,MASYC,OATZ,GAS+BE,KAT/B,CASYF,OATZ;AAAA,MASqBC,KATrB,GAS+BC,KAT/B,CASqBD,KATrB;AAWlChB,EAAAA,SAAS,CAAC,YAAM;AACZmB,IAAAA,OAAO,CAACC,GAAR,CAAYV,MAAZ;AACA,QAAMW,OAAO,GAAGd,GAAG,CAACe,MAAJ,CAAWZ,MAAM,CAACa,KAAP,CAAaC,EAAxB,CAAhB;AACA,QAAIH,OAAJ,EAAaH,QAAQ,mBAAMD,KAAN;AAAaN,MAAAA,IAAI,EAAEU,OAAO,CAACV,IAA3B;AAAiCC,MAAAA,KAAK,EAAEF,MAAM,CAACa,KAAP,CAAaC;AAArD,OAAR;AAChB,GAJQ,EAIN,CAACd,MAAD,CAJM,CAAT;;AAMA,MAAMe,YAAY,GAAG,SAAfA,YAAe,CAAAC,CAAC,EAAI;AACtBR,IAAAA,QAAQ,mBAAMD,KAAN;AAAaJ,MAAAA,WAAW,EAAEa,CAAC,CAACC,MAAF,CAASC,KAAnC;AAA0Cb,MAAAA,OAAO,EAAE,EAAnD;AAAuDC,MAAAA,KAAK,EAAE;AAA9D,OAAR;AACH,GAFD;;AAIA,MAAMa,YAAY,GAAG,SAAfA,YAAe,CAAMH,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBA,YAAAA,CAAC,CAACI,cAAF,GADiB,CAEjB;;AACAZ,YAAAA,QAAQ,mBAAMD,KAAN;AAAaH,cAAAA,UAAU,EAAE;AAAzB,eAAR;AAHiB;AAAA;AAAA,6CAKUb,KAAK,CAAC8B,GAAN,WAAa3B,GAAb,sBAAmC;AAAE4B,cAAAA,iBAAiB,EAAEpB,KAArB;AAA4BC,cAAAA,WAAW,EAAXA;AAA5B,aAAnC,CALV;;AAAA;AAKPoB,YAAAA,QALO;AAMb;AACAf,YAAAA,QAAQ,mBACDD,KADC;AAEJJ,cAAAA,WAAW,EAAE,EAFT;AAGJC,cAAAA,UAAU,EAAE,MAHR;AAIJC,cAAAA,OAAO,EAAEkB,QAAQ,CAACC,IAAT,CAAcC;AAJnB,eAAR;AAPa;AAAA;;AAAA;AAAA;AAAA;AAcbhB,YAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAF,YAAAA,QAAQ,mBACDD,KADC;AAEJH,cAAAA,UAAU,EAAE,iBAFR;AAGJE,cAAAA,KAAK,EAAE,YAAMiB,QAAN,CAAeC,IAAf,CAAoBlB;AAHvB,eAAR;;AAfa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAuBA,MAAMoB,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,WACtB;AAAM,MAAA,QAAQ,EAAEP,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,IAAI,EAAC,UADT;AAEI,MAAA,SAAS,EAAC,cAFd;AAGI,MAAA,QAAQ,EAAEJ,YAHd;AAII,MAAA,KAAK,EAAEZ,WAJX;AAKI,MAAA,WAAW,EAAC,mBALhB;AAMI,MAAA,QAAQ,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,SAAS,EAAC,yBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6CC,UAA7C,CADJ,CAXJ,CADsB;AAAA,GAA1B;;AAkBA,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAQH,IAAR,+BADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGKI,OAAO,IAAIb,kBAAkB,CAACa,OAAD,CAHlC,EAIKC,KAAK,IAAIb,gBAAgB,CAACa,KAAD,CAJ9B,EAKKoB,iBAAiB,EALtB,CADJ,CADJ,CADJ;AAaH,CA3ED;;AA6EA,eAAe9B,UAAU,CAACG,aAAD,CAAzB","sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { showSuccessMessage, showErrorMessage } from '../../../../helpers/alerts';\nimport { API } from '../../../../config';\nimport Router, { withRouter } from 'next/router';\nimport jwt from 'jsonwebtoken';\nimport Layout from '../../../../components/Layout';\n\nconst ResetPassword = ({ router }) => {\n    const [state, setState] = useState({\n        name: '',\n        token: '',\n        newPassword: '',\n        buttonText: 'Reset Password',\n        success: '',\n        error: ''\n    });\n    const { name, token, newPassword, buttonText, success, error } = state;\n\n    useEffect(() => {\n        console.log(router);\n        const decoded = jwt.decode(router.query.id);\n        if (decoded) setState({ ...state, name: decoded.name, token: router.query.id });\n    }, [router]);\n\n    const handleChange = e => {\n        setState({ ...state, newPassword: e.target.value, success: '', error: '' });\n    };\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n        // console.log('post email to ', email);\n        setState({ ...state, buttonText: 'Sending' });\n        try {\n            const response = await axios.put(`${API}/reset-password`, { resetPasswordLink: token, newPassword });\n            // console.log('FORGOT PASSWORD', response);\n            setState({\n                ...state,\n                newPassword: '',\n                buttonText: 'Done',\n                success: response.data.message\n            });\n        } catch (error) {\n            console.log('RESET PW ERROR', error);\n            setState({\n                ...state,\n                buttonText: 'Forgot Password',\n                error: error.response.data.error\n            });\n        }\n    };\n\n    const passwordResetForm = () => (\n        <form onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n                <input\n                    type=\"password\"\n                    className=\"form-control\"\n                    onChange={handleChange}\n                    value={newPassword}\n                    placeholder=\"Type new password\"\n                    required\n                />\n            </div>\n            <div>\n                <button className=\"btn btn-outline-warning\">{buttonText}</button>\n            </div>\n        </form>\n    );\n\n    return (\n        <Layout>\n            <div className=\"row\">\n                <div className=\"col-md-6 offset-md-3\">\n                    <h1>Hi {name}, Ready to Reset Password?</h1>\n                    <br />\n                    {success && showSuccessMessage(success)}\n                    {error && showErrorMessage(error)}\n                    {passwordResetForm()}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default withRouter(ResetPassword);\n"]},"metadata":{},"sourceType":"module"}